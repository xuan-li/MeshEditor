  GUIViewer.cpp
c:\code\mesheditor\external\libigl\include\igl\viewer\opengl_shader.cpp(114): warning C4244: 'argument': conversion from '__int64' to 'GLint', possible loss of data
c:\code\mesheditor\external\libigl\include\igl\material_colors.h(16): warning C4838: conversion from 'double' to 'const float' requires a narrowing conversion
c:\code\mesheditor\external\libigl\include\igl\material_colors.h(16): warning C4305: 'initializing': truncation from 'double' to 'const float'
c:\code\mesheditor\external\libigl\include\igl\material_colors.h(17): warning C4838: conversion from 'double' to 'const float' requires a narrowing conversion
c:\code\mesheditor\external\libigl\include\igl\material_colors.h(17): warning C4305: 'initializing': truncation from 'double' to 'const float'
c:\code\mesheditor\external\libigl\include\igl\material_colors.h(18): warning C4838: conversion from 'double' to 'const float' requires a narrowing conversion
c:\code\mesheditor\external\libigl\include\igl\material_colors.h(18): warning C4305: 'initializing': truncation from 'double' to 'const float'
c:\code\mesheditor\external\libigl\include\igl\material_colors.h(23): warning C4838: conversion from 'double' to 'const float' requires a narrowing conversion
c:\code\mesheditor\external\libigl\include\igl\material_colors.h(23): warning C4305: 'initializing': truncation from 'double' to 'const float'
c:\code\mesheditor\external\libigl\include\igl\material_colors.h(24): warning C4838: conversion from 'double' to 'const float' requires a narrowing conversion
c:\code\mesheditor\external\libigl\include\igl\material_colors.h(24): warning C4305: 'initializing': truncation from 'double' to 'const float'
c:\code\mesheditor\external\libigl\include\igl\material_colors.h(25): warning C4838: conversion from 'double' to 'const float' requires a narrowing conversion
c:\code\mesheditor\external\libigl\include\igl\material_colors.h(25): warning C4305: 'initializing': truncation from 'double' to 'const float'
c:\code\mesheditor\external\libigl\include\igl\material_colors.h(26): warning C4838: conversion from 'double' to 'const float' requires a narrowing conversion
c:\code\mesheditor\external\libigl\include\igl\material_colors.h(26): warning C4305: 'initializing': truncation from 'double' to 'const float'
c:\code\mesheditor\external\libigl\include\igl\material_colors.h(39): warning C4838: conversion from 'double' to 'const float' requires a narrowing conversion
c:\code\mesheditor\external\libigl\include\igl\material_colors.h(39): warning C4305: 'initializing': truncation from 'double' to 'const float'
c:\code\mesheditor\external\libigl\include\igl\material_colors.h(40): warning C4838: conversion from 'double' to 'const float' requires a narrowing conversion
c:\code\mesheditor\external\libigl\include\igl\material_colors.h(40): warning C4305: 'initializing': truncation from 'double' to 'const float'
c:\code\mesheditor\external\libigl\include\igl\material_colors.h(43): warning C4838: conversion from 'double' to 'const float' requires a narrowing conversion
c:\code\mesheditor\external\libigl\include\igl\material_colors.h(43): warning C4305: 'initializing': truncation from 'double' to 'const float'
c:\code\mesheditor\external\libigl\include\igl\material_colors.h(44): warning C4838: conversion from 'double' to 'const float' requires a narrowing conversion
c:\code\mesheditor\external\libigl\include\igl\material_colors.h(44): warning C4305: 'initializing': truncation from 'double' to 'const float'
c:\code\mesheditor\external\libigl\include\igl\material_colors.h(45): warning C4838: conversion from 'double' to 'const float' requires a narrowing conversion
c:\code\mesheditor\external\libigl\include\igl\material_colors.h(45): warning C4305: 'initializing': truncation from 'double' to 'const float'
c:\code\mesheditor\external\libigl\include\igl\material_colors.h(47): warning C4305: 'argument': truncation from 'double' to 'const float'
c:\code\mesheditor\external\libigl\include\igl\material_colors.h(48): warning C4305: 'argument': truncation from 'double' to 'const float'
c:\code\mesheditor\external\libigl\include\igl\material_colors.h(49): warning C4305: 'argument': truncation from 'double' to 'const float'
c:\code\mesheditor\external\libigl\include\igl\material_colors.h(50): warning C4305: 'argument': truncation from 'double' to 'const float'
c:\code\mesheditor\external\libigl\include\igl\material_colors.h(51): warning C4305: 'argument': truncation from 'double' to 'const float'
c:\code\mesheditor\external\libigl\include\igl\material_colors.h(52): warning C4305: 'argument': truncation from 'double' to 'const float'
c:\code\mesheditor\external\libigl\include\igl\material_colors.h(54): warning C4305: 'argument': truncation from 'double' to 'const float'
c:\code\mesheditor\external\libigl\include\igl\material_colors.h(55): warning C4305: 'argument': truncation from 'double' to 'const float'
c:\code\mesheditor\external\libigl\include\igl\parula.h(57): warning C4305: 'argument': truncation from 'double' to 'const float'
c:\code\mesheditor\external\libigl\include\igl\internal_angles.h : warning C4819: The file contains a character that cannot be represented in the current code page (936). Save the file in Unicode format to prevent data loss
c:\code\mesheditor\external\libigl\include\igl\internal_angles.h : warning C4819: The file contains a character that cannot be represented in the current code page (936). Save the file in Unicode format to prevent data loss
c:\code\mesheditor\external\libigl\include\igl\viewer\viewerdata.cpp(237): warning C4244: 'initializing': conversion from '__int64' to 'int', possible loss of data
c:\code\mesheditor\external\libigl\include\igl\viewer\viewerdata.cpp(286): warning C4244: 'initializing': conversion from '__int64' to 'int', possible loss of data
c:\code\mesheditor\external\libigl\include\igl\viewer\viewerdata.cpp(307): warning C4244: 'initializing': conversion from '__int64' to 'int', possible loss of data
c:\code\mesheditor\external\libigl\include\igl\viewer\opengl_state.cpp(233): warning C4244: '=': conversion from '__int64' to 'int', possible loss of data
c:\code\mesheditor\external\libigl\include\igl\viewer\opengl_state.cpp(234): warning C4244: '=': conversion from '__int64' to 'int', possible loss of data
c:\code\mesheditor\external\libigl\include\igl\viewer\opengl_state.cpp(347): warning C4244: 'argument': conversion from '__int64' to 'GLsizei', possible loss of data
c:\code\mesheditor\external\libigl\include\igl\viewer\opengl_state.cpp(355): warning C4244: 'argument': conversion from '__int64' to 'GLsizei', possible loss of data
c:\code\mesheditor\external\libigl\include\igl\viewer\opengl_state.cpp(360): warning C4244: 'argument': conversion from '__int64' to 'GLsizei', possible loss of data
c:\code\mesheditor\external\libigl\include\igl\viewer\textrenderer.cpp(85): warning C4244: 'argument': conversion from 'double' to 'const float', possible loss of data
c:\code\mesheditor\external\libigl\include\igl\viewer\viewercore.cpp(31): warning C4244: '=': conversion from 'double' to 'float', possible loss of data
c:\code\mesheditor\external\libigl\include\igl\viewer\viewercore.cpp(65): warning C4244: '=': conversion from 'double' to 'float', possible loss of data
c:\code\mesheditor\external\libigl\include\igl\viewer\viewercore.cpp(82): warning C4244: '=': conversion from 'double' to 'float', possible loss of data
c:\code\mesheditor\external\libigl\include\igl\viewer\viewercore.cpp(120): warning C4244: 'argument': conversion from 'float' to 'GLsizei', possible loss of data
c:\code\mesheditor\external\libigl\include\igl\viewer\viewercore.cpp(120): warning C4244: 'argument': conversion from 'float' to 'GLint', possible loss of data
c:\code\mesheditor\external\libigl\include\igl\viewer\viewercore.cpp(138): warning C4244: 'initializing': conversion from 'double' to 'float', possible loss of data
c:\code\mesheditor\external\libigl\include\igl\viewer\viewercore.cpp(143): warning C4244: 'initializing': conversion from 'double' to 'float', possible loss of data
c:\code\mesheditor\external\libigl\include\igl\viewer\viewercore.cpp(144): warning C4244: 'initializing': conversion from 'double' to 'float', possible loss of data
c:\code\mesheditor\external\libigl\include\igl\viewer\viewercore.cpp(223): warning C4244: 'argument': conversion from '__int64' to 'const double', possible loss of data
c:\code\mesheditor\external\libigl\include\igl\viewer\viewercore.cpp(298): warning C4244: 'initializing': conversion from '__int64' to 'unsigned int', possible loss of data
c:\code\mesheditor\external\libigl\include\igl\viewer\viewercore.cpp(299): warning C4244: 'initializing': conversion from '__int64' to 'unsigned int', possible loss of data
c:\code\mesheditor\external\libigl\include\igl\viewer\viewercore.cpp(335): warning C4244: 'argument': conversion from 'unsigned int' to 'const float', possible loss of data
c:\code\mesheditor\external\libigl\include\igl\writeoff.cpp(70): warning C4003: not enough actual parameters for macro 'RGB'
c:\code\mesheditor\external\libigl\include\igl\eps.h(16): warning C4305: 'initializing': truncation from 'double' to 'float'
c:\code\mesheditor\external\libigl\include\igl\eps.h(17): warning C4305: 'initializing': truncation from 'double' to 'float'
c:\code\mesheditor\external\libigl\include\igl\viewer\viewer.cpp(155): warning C4244: 'initializing': conversion from 'double' to 'int', possible loss of data
c:\code\mesheditor\external\libigl\include\igl\viewer\viewer.cpp(156): warning C4244: 'initializing': conversion from 'double' to 'int', possible loss of data
c:\code\mesheditor\external\libigl\include\igl\viewer\viewer.cpp(172): warning C4244: 'argument': conversion from 'double' to 'int', possible loss of data
c:\code\mesheditor\external\libigl\include\igl\viewer\viewer.cpp(186): warning C4244: 'argument': conversion from 'double' to 'float', possible loss of data
c:\code\mesheditor\external\libigl\include\igl\viewer\viewer.cpp(613): warning C4244: 'argument': conversion from '__int64' to 'const double', possible loss of data
c:\code\mesheditor\external\libigl\include\igl\viewer\viewer.cpp(618): warning C4244: 'argument': conversion from 'double' to 'const float', possible loss of data
c:\code\mesheditor\external\libigl\include\igl\viewer\viewer.cpp(709): warning C4244: 'argument': conversion from 'float' to 'const int', possible loss of data
c:\code\mesheditor\external\libigl\include\igl\viewer\viewer.cpp(720): warning C4244: 'argument': conversion from 'int' to 'const float', possible loss of data
c:\code\mesheditor\external\libigl\include\igl\viewer\viewer.cpp(721): warning C4244: 'argument': conversion from 'int' to 'const float', possible loss of data
c:\code\mesheditor\external\libigl\include\igl\viewer\viewer.cpp(759): warning C4244: 'initializing': conversion from 'double' to 'float', possible loss of data
c:\code\mesheditor\external\libigl\include\igl\viewer\viewer.cpp(846): warning C4244: 'argument': conversion from 'int' to 'const float', possible loss of data
c:\code\mesheditor\external\libigl\include\igl\opengl\gl.h(26): warning C4005: 'NOMINMAX': macro redefinition
  c:\code\mesheditor\external\libigl\include\igl\opengl\gl.h(26): note: command-line arguments:  see previous definition of 'NOMINMAX'
c:\code\mesheditor\external\libigl\include\igl\png\texture_from_png.cpp(68): warning C4018: '<': signed/unsigned mismatch
c:\code\mesheditor\external\libigl\include\igl\png\texture_from_png.cpp(69): warning C4018: '<': signed/unsigned mismatch
c:\code\mesheditor\viewer\src\guiviewer.cpp(180): warning C4244: 'argument': conversion from 'double' to 'const float', possible loss of data
c:\code\mesheditor\viewer\src\guiviewer.cpp(432): warning C4244: 'argument': conversion from 'double' to 'const float', possible loss of data
c:\code\mesheditor\viewer\src\guiviewer.cpp(433): warning C4244: 'argument': conversion from 'double' to 'const float', possible loss of data
c:\code\mesheditor\external\libigl\include\igl\ortho.cpp(21): warning C4244: '=': conversion from 'double' to 'float', possible loss of data
  c:\code\mesheditor\external\libigl\include\igl\viewer\viewercore.cpp(139): note: see reference to function template instantiation 'void igl::ortho<Eigen::Matrix<float,4,4,0,4,4>>(const float,const float,const float,const float,const float,const float,Eigen::PlainObjectBase<Eigen::Matrix<float,4,4,0,4,4>> &)' being compiled
c:\code\mesheditor\external\libigl\include\igl\ortho.cpp(22): warning C4244: '=': conversion from 'double' to 'float', possible loss of data
c:\code\mesheditor\external\libigl\include\igl\ortho.cpp(23): warning C4244: '=': conversion from 'double' to 'float', possible loss of data
c:\code\mesheditor\external\libigl\include\igl\frustum.cpp(20): warning C4244: '=': conversion from 'double' to 'float', possible loss of data
  c:\code\mesheditor\external\libigl\include\igl\viewer\viewercore.cpp(145): note: see reference to function template instantiation 'void igl::frustum<Eigen::Matrix<float,4,4,0,4,4>>(const float,const float,const float,const float,const float,const float,Eigen::PlainObjectBase<Eigen::Matrix<float,4,4,0,4,4>> &)' being compiled
c:\code\mesheditor\external\libigl\include\igl\frustum.cpp(21): warning C4244: '=': conversion from 'double' to 'float', possible loss of data
c:\code\mesheditor\external\libigl\include\igl\frustum.cpp(26): warning C4244: '=': conversion from 'double' to 'float', possible loss of data
c:\code\mesheditor\external\libigl\include\igl\two_axis_valuator_fixed_up.cpp(29): warning C4244: 'argument': conversion from 'double' to 'const float', possible loss of data
  c:\code\mesheditor\external\libigl\include\igl\viewer\viewer.cpp(709): note: see reference to function template instantiation 'void igl::two_axis_valuator_fixed_up<float,float>(const int,const int,const double,const Eigen::Quaternion<float,0> &,const int,const int,const int,const int,Eigen::Quaternion<float,0> &)' being compiled
c:\code\mesheditor\external\libigl\include\igl\two_axis_valuator_fixed_up.cpp(39): warning C4244: 'argument': conversion from 'double' to 'const float', possible loss of data
c:\code\mesheditor\external\libigl\include\igl\snap_to_canonical_view_quat.cpp(106): warning C4244: 'argument': conversion from 'const double' to 'const float', possible loss of data
  c:\code\mesheditor\external\libigl\include\igl\viewer\viewer.cpp(852): note: see reference to function template instantiation 'bool igl::snap_to_canonical_view_quat<float,float>(const Eigen::Quaternion<float,0> &,const double,Eigen::Quaternion<float,0> &)' being compiled
c:\code\mesheditor\external\libigl\include\igl\per_face_normals.cpp(21): warning C4244: 'initializing': conversion from '__int64' to 'int', possible loss of data
  c:\code\mesheditor\external\libigl\include\igl\per_face_normals.cpp(47): note: see reference to function template instantiation 'void igl::per_face_normals<Eigen::Matrix<double,-1,-1,0,-1,-1>,Eigen::Matrix<int,-1,-1,0,-1,-1>,Eigen::Matrix<double,3,1,0,3,1>,Eigen::Matrix<double,-1,-1,0,-1,-1>>(const Eigen::PlainObjectBase<Eigen::Matrix<double,-1,-1,0,-1,-1>> &,const Eigen::PlainObjectBase<Eigen::Matrix<int,-1,-1,0,-1,-1>> &,const Eigen::PlainObjectBase<Eigen::Matrix<double,3,1,0,3,1>> &,Eigen::PlainObjectBase<Eigen::Matrix<double,-1,-1,0,-1,-1>> &)' being compiled
  c:\code\mesheditor\external\libigl\include\igl\viewer\viewerdata.cpp(342): note: see reference to function template instantiation 'void igl::per_face_normals<Eigen::Matrix<double,-1,-1,0,-1,-1>,Eigen::Matrix<int,-1,-1,0,-1,-1>,Eigen::Matrix<double,-1,-1,0,-1,-1>>(const Eigen::PlainObjectBase<Eigen::Matrix<double,-1,-1,0,-1,-1>> &,const Eigen::PlainObjectBase<Eigen::Matrix<int,-1,-1,0,-1,-1>> &,Eigen::PlainObjectBase<Eigen::Matrix<double,-1,-1,0,-1,-1>> &)' being compiled
c:\code\mesheditor\external\libigl\include\igl\list_to_matrix.cpp(22): warning C4267: 'initializing': conversion from 'size_t' to 'int', possible loss of data
  c:\code\mesheditor\external\libigl\include\igl\readoff.cpp(184): note: see reference to function template instantiation 'bool igl::list_to_matrix<double,Eigen::Matrix<double,-1,-1,0,-1,-1>>(const std::vector<std::vector<double,std::allocator<_Ty>>,std::allocator<std::vector<_Ty,std::allocator<_Ty>>>> &,Eigen::PlainObjectBase<Eigen::Matrix<double,-1,-1,0,-1,-1>> &)' being compiled
          with
          [
              _Ty=double
          ]
  c:\code\mesheditor\external\libigl\include\igl\viewer\viewer.cpp(387): note: see reference to function template instantiation 'bool igl::readOFF<Eigen::Matrix<double,-1,-1,0,-1,-1>,Eigen::Matrix<int,-1,-1,0,-1,-1>>(const std::string,Eigen::PlainObjectBase<Eigen::Matrix<double,-1,-1,0,-1,-1>> &,Eigen::PlainObjectBase<Eigen::Matrix<int,-1,-1,0,-1,-1>> &)' being compiled
c:\code\mesheditor\external\libigl\include\igl\trackball.cpp(121): warning C4244: '=': conversion from 'double' to 'float', possible loss of data
  c:\code\mesheditor\external\libigl\include\igl\trackball.cpp(157): note: see reference to function template instantiation 'void igl::trackball<Scalarquat>(const double,const double,const Q_type,const Q_type *,const double,const double,const double,const double,Q_type *)' being compiled
          with
          [
              Scalarquat=float,
              Q_type=float
          ]
  c:\code\mesheditor\external\libigl\include\igl\viewer\viewer.cpp(701): note: see reference to function template instantiation 'void igl::trackball<float,float>(const double,const double,const double,const Eigen::Quaternion<float,0> &,const double,const double,const double,const double,Eigen::Quaternion<float,0> &)' being compiled
c:\code\mesheditor\external\libigl\include\igl\trackball.cpp(122): warning C4244: '=': conversion from 'double' to 'float', possible loss of data
c:\code\mesheditor\external\libigl\include\igl\trackball.cpp(123): warning C4244: '=': conversion from 'double' to 'float', possible loss of data
c:\code\mesheditor\external\libigl\include\igl\trackball.cpp(124): warning C4244: '=': conversion from 'double' to 'float', possible loss of data
c:\code\mesheditor\external\libigl\include\igl\trackball.cpp(128): warning C4244: '=': conversion from 'double' to 'float', possible loss of data
c:\code\mesheditor\external\libigl\include\igl\trackball.cpp(129): warning C4244: '=': conversion from 'double' to 'float', possible loss of data
c:\code\mesheditor\external\libigl\include\igl\trackball.cpp(130): warning C4244: '=': conversion from 'double' to 'float', possible loss of data
c:\code\mesheditor\external\libigl\include\igl\trackball.cpp(131): warning C4244: '=': conversion from 'double' to 'float', possible loss of data
c:\code\mesheditor\external\libigl\include\igl\unproject.cpp(36): warning C4244: 'initializing': conversion from '__int64' to 'int', possible loss of data
  c:\code\mesheditor\external\libigl\include\igl\unproject.cpp(65): note: see reference to function template instantiation 'void igl::unproject<Derived,Eigen::Matrix<float,4,4,0,4,4>,Eigen::Matrix<float,4,4,0,4,4>,Eigen::Matrix<float,4,1,0,4,1>,Eigen::Matrix<float,3,1,0,3,1>>(const Eigen::MatrixBase<Derived> &,const Eigen::MatrixBase<Eigen::Matrix<float,4,4,0,4,4>> &,const Eigen::MatrixBase<Eigen::Matrix<float,4,4,0,4,4>> &,const Eigen::MatrixBase<Eigen::Matrix<float,4,1,0,4,1>> &,Eigen::PlainObjectBase<Derived> &)' being compiled
          with
          [
              Derived=Eigen::Matrix<float,3,1,0,3,1>
          ]
  c:\code\mesheditor\external\libigl\include\igl\viewer\viewer.cpp(720): note: see reference to function template instantiation 'Eigen::Matrix<float,3,1,0,3,1> igl::unproject<float>(const Eigen::Matrix<float,3,1,0,3,1> &,const Eigen::Matrix<float,4,4,0,4,4> &,const Eigen::Matrix<float,4,4,0,4,4> &,const Eigen::Matrix<float,4,1,0,4,1> &)' being compiled
c:\code\mesheditor\external\libigl\include\igl\unproject.cpp(36): warning C4244: 'initializing': conversion from '__int64' to 'const int', possible loss of data
c:\code\mesheditor\external\libigl\include\igl\snap_to_canonical_view_quat.cpp(48): warning C4305: 'initializing': truncation from 'double' to 'float'
  c:\code\mesheditor\external\libigl\include\igl\snap_to_canonical_view_quat.cpp(106): note: see reference to function template instantiation 'bool igl::snap_to_canonical_view_quat<Scalars>(const Q_type *,const Q_type,Q_type *)' being compiled
          with
          [
              Scalars=float,
              Q_type=float
          ]
  c:\code\mesheditor\external\libigl\include\igl\viewer\viewer.cpp(852): note: see reference to function template instantiation 'bool igl::snap_to_canonical_view_quat<float,float>(const Eigen::Quaternion<float,0> &,const double,Eigen::Quaternion<float,0> &)' being compiled
c:\code\mesheditor\external\libigl\include\igl\snap_to_canonical_view_quat.cpp(64): warning C4244: '+=': conversion from 'double' to 'float', possible loss of data
c:\code\mesheditor\external\libigl\include\igl\snap_to_canonical_view_quat.cpp(92): warning C4244: '=': conversion from 'double' to 'float', possible loss of data
c:\code\mesheditor\external\libigl\include\igl\readobj.cpp(140): warning C4267: 'return': conversion from 'size_t' to 'int', possible loss of data
  c:\code\mesheditor\external\libigl\include\igl\readobj.cpp(36): note: see reference to function template instantiation 'bool igl::readOBJ<double,int>(FILE *,std::vector<std::vector<double,std::allocator<_Ty>>,std::allocator<std::vector<_Ty,std::allocator<_Ty>>>> &,std::vector<std::vector<_Ty,std::allocator<_Ty>>,std::allocator<std::vector<_Ty,std::allocator<_Ty>>>> &,std::vector<std::vector<_Ty,std::allocator<_Ty>>,std::allocator<std::vector<_Ty,std::allocator<_Ty>>>> &,std::vector<std::vector<int,std::allocator<int>>,std::allocator<std::vector<int,std::allocator<int>>>> &,std::vector<std::vector<int,std::allocator<int>>,std::allocator<std::vector<int,std::allocator<int>>>> &,std::vector<std::vector<int,std::allocator<int>>,std::allocator<std::vector<int,std::allocator<int>>>> &)' being compiled
          with
          [
              _Ty=double
          ]
  c:\code\mesheditor\external\libigl\include\igl\readobj.cpp(263): note: see reference to function template instantiation 'bool igl::readOBJ<double,int>(const std::string,std::vector<std::vector<double,std::allocator<_Ty>>,std::allocator<std::vector<_Ty,std::allocator<_Ty>>>> &,std::vector<std::vector<_Ty,std::allocator<_Ty>>,std::allocator<std::vector<_Ty,std::allocator<_Ty>>>> &,std::vector<std::vector<_Ty,std::allocator<_Ty>>,std::allocator<std::vector<_Ty,std::allocator<_Ty>>>> &,std::vector<std::vector<int,std::allocator<int>>,std::allocator<std::vector<int,std::allocator<int>>>> &,std::vector<std::vector<int,std::allocator<int>>,std::allocator<std::vector<int,std::allocator<int>>>> &,std::vector<std::vector<int,std::allocator<int>>,std::allocator<std::vector<int,std::allocator<int>>>> &)' being compiled
          with
          [
              _Ty=double
          ]
  c:\code\mesheditor\external\libigl\include\igl\viewer\viewer.cpp(404): note: see reference to function template instantiation 'bool igl::readOBJ<Eigen::Matrix<double,-1,-1,0,-1,-1>,Eigen::Matrix<double,-1,-1,0,-1,-1>,Eigen::Matrix<double,-1,-1,0,-1,-1>,Eigen::Matrix<int,-1,-1,0,-1,-1>,Eigen::Matrix<int,-1,-1,0,-1,-1>,Eigen::Matrix<int,-1,-1,0,-1,-1>>(const std::string,Eigen::PlainObjectBase<Eigen::Matrix<double,-1,-1,0,-1,-1>> &,Eigen::PlainObjectBase<Eigen::Matrix<double,-1,-1,0,-1,-1>> &,Eigen::PlainObjectBase<Eigen::Matrix<double,-1,-1,0,-1,-1>> &,Eigen::PlainObjectBase<Eigen::Matrix<int,-1,-1,0,-1,-1>> &,Eigen::PlainObjectBase<Eigen::Matrix<int,-1,-1,0,-1,-1>> &,Eigen::PlainObjectBase<Eigen::Matrix<int,-1,-1,0,-1,-1>> &)' being compiled
c:\code\mesheditor\external\libigl\include\igl\readobj.cpp(144): warning C4267: 'return': conversion from 'size_t' to 'int', possible loss of data
c:\code\mesheditor\external\libigl\include\igl\readobj.cpp(148): warning C4267: 'return': conversion from 'size_t' to 'int', possible loss of data
c:\code\mesheditor\external\libigl\include\igl\parula.cpp(21): warning C4244: 'initializing': conversion from 'double' to 'float', possible loss of data
  c:\code\mesheditor\external\libigl\include\igl\parula.cpp(64): note: see reference to function template instantiation 'void igl::parula<double>(const T,T &,T &,T &)' being compiled
          with
          [
              T=double
          ]
  c:\code\mesheditor\external\libigl\include\igl\parula.cpp(46): note: see reference to function template instantiation 'void igl::parula<Eigen::Matrix<double,-1,-1,0,-1,-1>,Eigen::Matrix<double,-1,-1,0,-1,-1>>(const Eigen::PlainObjectBase<Eigen::Matrix<double,-1,-1,0,-1,-1>> &,const double,const double,Eigen::PlainObjectBase<Eigen::Matrix<double,-1,-1,0,-1,-1>> &)' being compiled
  c:\code\mesheditor\external\libigl\include\igl\viewer\viewerdata.cpp(107): note: see reference to function template instantiation 'void igl::parula<Eigen::Matrix<double,-1,-1,0,-1,-1>,Eigen::Matrix<double,-1,-1,0,-1,-1>>(const Eigen::PlainObjectBase<Eigen::Matrix<double,-1,-1,0,-1,-1>> &,const bool,Eigen::PlainObjectBase<Eigen::Matrix<double,-1,-1,0,-1,-1>> &)' being compiled
c:\code\mesheditor\external\libigl\include\igl\parula.cpp(21): warning C4244: 'initializing': conversion from 'double' to 'const float', possible loss of data
c:\code\mesheditor\external\libigl\include\igl\parula.cpp(24): warning C4244: 'initializing': conversion from 'float' to '::size_t', possible loss of data
c:\code\mesheditor\external\libigl\include\igl\parula.cpp(25): warning C4244: 'initializing': conversion from 'float' to '::size_t', possible loss of data
c:\code\mesheditor\external\libigl\include\igl\parula.cpp(26): warning C4244: 'initializing': conversion from 'double' to 'float', possible loss of data
c:\code\mesheditor\external\libigl\include\igl\parula.cpp(26): warning C4244: 'initializing': conversion from 'double' to 'const float', possible loss of data
c:\code\mesheditor\external\libigl\include\igl\doublearea.cpp(25): warning C4244: 'initializing': conversion from '__int64' to 'int', possible loss of data
  c:\code\mesheditor\external\libigl\include\igl\per_vertex_normals.cpp(62): note: see reference to function template instantiation 'void igl::doublearea<Derived,Eigen::Matrix<int,-1,-1,0,-1,-1>,Eigen::Matrix<double,-1,1,0,-1,1>>(const Eigen::MatrixBase<Derived> &,const Eigen::MatrixBase<Eigen::Matrix<int,-1,-1,0,-1,-1>> &,Eigen::PlainObjectBase<Eigen::Matrix<double,-1,1,0,-1,1>> &)' being compiled
          with
          [
              Derived=Eigen::Matrix<double,-1,-1,0,-1,-1>
          ]
  c:\code\mesheditor\external\libigl\include\igl\per_vertex_normals.cpp(112): note: see reference to function template instantiation 'void igl::per_vertex_normals<Eigen::Matrix<double,-1,-1,0,-1,-1>,Eigen::Matrix<int,-1,-1,0,-1,-1>,Eigen::Matrix<double,-1,-1,0,-1,-1>,Eigen::Matrix<double,-1,-1,0,-1,-1>>(const Eigen::PlainObjectBase<Eigen::Matrix<double,-1,-1,0,-1,-1>> &,const Eigen::PlainObjectBase<Eigen::Matrix<int,-1,-1,0,-1,-1>> &,const igl::PerVertexNormalsWeightingType,const Eigen::PlainObjectBase<Eigen::Matrix<double,-1,-1,0,-1,-1>> &,Eigen::PlainObjectBase<Eigen::Matrix<double,-1,-1,0,-1,-1>> &)' being compiled
  c:\code\mesheditor\external\libigl\include\igl\viewer\viewerdata.cpp(343): note: see reference to function template instantiation 'void igl::per_vertex_normals<Eigen::Matrix<double,-1,-1,0,-1,-1>,Eigen::Matrix<int,-1,-1,0,-1,-1>>(const Eigen::PlainObjectBase<Eigen::Matrix<double,-1,-1,0,-1,-1>> &,const Eigen::PlainObjectBase<Eigen::Matrix<int,-1,-1,0,-1,-1>> &,const Eigen::PlainObjectBase<Eigen::Matrix<double,-1,-1,0,-1,-1>> &,Eigen::PlainObjectBase<Eigen::Matrix<double,-1,-1,0,-1,-1>> &)' being compiled
c:\code\mesheditor\external\libigl\include\igl\doublearea.cpp(25): warning C4244: 'initializing': conversion from '__int64' to 'const int', possible loss of data
c:\code\mesheditor\external\libigl\include\igl\doublearea.cpp(52): warning C4267: 'argument': conversion from 'size_t' to 'const int', possible loss of data
c:\code\mesheditor\external\libigl\include\igl\doublearea.cpp(64): warning C4267: 'argument': conversion from 'size_t' to 'const int', possible loss of data
c:\code\mesheditor\external\libigl\include\igl\squared_edge_lengths.cpp(19): warning C4244: 'initializing': conversion from '__int64' to 'int', possible loss of data
  c:\code\mesheditor\external\libigl\include\igl\internal_angles.cpp(30): note: see reference to function template instantiation 'void igl::squared_edge_lengths<Derived,Eigen::Matrix<int,-1,-1,0,-1,-1>,Eigen::Matrix<double,-1,-1,0,-1,-1>>(const Eigen::MatrixBase<Derived> &,const Eigen::MatrixBase<Eigen::Matrix<int,-1,-1,0,-1,-1>> &,Eigen::PlainObjectBase<Derived> &)' being compiled
          with
          [
              Derived=Eigen::Matrix<double,-1,-1,0,-1,-1>
          ]
  c:\code\mesheditor\external\libigl\include\igl\per_vertex_normals.cpp(67): note: see reference to function template instantiation 'void igl::internal_angles<Eigen::Matrix<double,-1,-1,0,-1,-1>,Eigen::Matrix<int,-1,-1,0,-1,-1>,Eigen::Matrix<double,-1,3,0,-1,3>>(const Eigen::PlainObjectBase<Eigen::Matrix<double,-1,-1,0,-1,-1>> &,const Eigen::PlainObjectBase<Eigen::Matrix<int,-1,-1,0,-1,-1>> &,Eigen::PlainObjectBase<Eigen::Matrix<double,-1,3,0,-1,3>> &)' being compiled
c:\code\mesheditor\external\libigl\include\igl\squared_edge_lengths.cpp(19): warning C4244: 'initializing': conversion from '__int64' to 'const int', possible loss of data
c:\code\mesheditor\external\libigl\include\igl\sort.cpp(29): warning C4244: 'initializing': conversion from '__int64' to 'int', possible loss of data
  c:\code\mesheditor\external\libigl\include\igl\doublearea.cpp(159): note: see reference to function template instantiation 'void igl::sort<Derived,Eigen::Matrix<double,-1,3,0,-1,3>,Eigen::Matrix<int,-1,-1,0,-1,-1>>(const Eigen::DenseBase<Derived> &,const int,const bool,Eigen::PlainObjectBase<Derived> &,Eigen::PlainObjectBase<Eigen::Matrix<int,-1,-1,0,-1,-1>> &)' being compiled
          with
          [
              Derived=Eigen::Matrix<double,-1,3,0,-1,3>
          ]
  c:\code\mesheditor\external\libigl\include\igl\doublearea.cpp(71): note: see reference to function template instantiation 'void igl::doublearea<Derived,Eigen::Matrix<double,-1,1,0,-1,1>>(const Eigen::MatrixBase<Derived> &,const double,Eigen::PlainObjectBase<Eigen::Matrix<double,-1,1,0,-1,1>> &)' being compiled
          with
          [
              Derived=Eigen::Matrix<double,-1,3,0,-1,3>
          ]
c:\code\mesheditor\external\libigl\include\igl\sort.cpp(42): warning C4244: 'initializing': conversion from '__int64' to 'int', possible loss of data
c:\code\mesheditor\external\libigl\include\igl\sort.cpp(73): warning C4267: '=': conversion from 'size_t' to 'int', possible loss of data
c:\code\mesheditor\external\libigl\include\igl\sort.cpp(77): warning C4267: '=': conversion from 'size_t' to 'int', possible loss of data
c:\code\mesheditor\external\libigl\include\igl\parallel_for.h(105): warning C4244: 'argument': conversion from 'Index' to 'const int', possible loss of data
  c:\code\mesheditor\external\libigl\include\igl\doublearea.cpp(196): note: see reference to function template instantiation 'bool igl::parallel_for<Index,igl::doublearea::<lambda_20194c6ff60897c31b155cf6fd000e2a>>(const Index,const FunctionType &,const ::size_t)' being compiled
          with
          [
              Index=Index,
              FunctionType=igl::doublearea::<lambda_20194c6ff60897c31b155cf6fd000e2a>
          ]
c:\code\mesheditor\external\libigl\include\igl\sort.cpp(166): warning C4244: 'initializing': conversion from '__int64' to 'int', possible loss of data
  c:\code\mesheditor\external\libigl\include\igl\sort.cpp(36): note: see reference to function template instantiation 'void igl::sort2<Derived,Eigen::Matrix<double,-1,3,0,-1,3>,Eigen::Matrix<int,-1,-1,0,-1,-1>>(const Eigen::DenseBase<Derived> &,const int,const bool,Eigen::PlainObjectBase<Derived> &,Eigen::PlainObjectBase<Eigen::Matrix<int,-1,-1,0,-1,-1>> &)' being compiled
          with
          [
              Derived=Eigen::Matrix<double,-1,3,0,-1,3>
          ]
  c:\code\mesheditor\external\libigl\include\igl\doublearea.cpp(159): note: see reference to function template instantiation 'void igl::sort<Derived,Eigen::Matrix<double,-1,3,0,-1,3>,Eigen::Matrix<int,-1,-1,0,-1,-1>>(const Eigen::DenseBase<Derived> &,const int,const bool,Eigen::PlainObjectBase<Derived> &,Eigen::PlainObjectBase<Eigen::Matrix<int,-1,-1,0,-1,-1>> &)' being compiled
          with
          [
              Derived=Eigen::Matrix<double,-1,3,0,-1,3>
          ]
c:\code\mesheditor\external\libigl\include\igl\sort.cpp(168): warning C4244: 'initializing': conversion from '__int64' to 'int', possible loss of data
c:\code\mesheditor\external\libigl\include\igl\sort.cpp(212): warning C4244: 'initializing': conversion from '__int64' to 'int', possible loss of data
  c:\code\mesheditor\external\libigl\include\igl\sort.cpp(38): note: see reference to function template instantiation 'void igl::sort3<Derived,Eigen::Matrix<double,-1,3,0,-1,3>,Eigen::Matrix<int,-1,-1,0,-1,-1>>(const Eigen::DenseBase<Derived> &,const int,const bool,Eigen::PlainObjectBase<Derived> &,Eigen::PlainObjectBase<Eigen::Matrix<int,-1,-1,0,-1,-1>> &)' being compiled
          with
          [
              Derived=Eigen::Matrix<double,-1,3,0,-1,3>
          ]
c:\code\mesheditor\external\libigl\include\igl\sort.cpp(214): warning C4244: 'initializing': conversion from '__int64' to 'int', possible loss of data
c:\code\mesheditor\external\libigl\include\igl\parallel_for.h(130): warning C4018: '<': signed/unsigned mismatch
  c:\code\mesheditor\external\libigl\include\igl\parallel_for.h(106): note: see reference to function template instantiation 'bool igl::parallel_for<Index,igl::parallel_for::<lambda_0aa86a621147cf7a738322328a6221d6>,igl::parallel_for::<lambda_999cc99d1f97b264a087ab7b0445cd27>,igl::parallel_for::<lambda_0aa86a621147cf7a738322328a6221d6>>(const Index,const PreFunctionType &,const FunctionType &,const AccumFunctionType &,const ::size_t)' being compiled
          with
          [
              Index=Index,
              PreFunctionType=igl::parallel_for::<lambda_0aa86a621147cf7a738322328a6221d6>,
              FunctionType=igl::parallel_for::<lambda_999cc99d1f97b264a087ab7b0445cd27>,
              AccumFunctionType=igl::parallel_for::<lambda_0aa86a621147cf7a738322328a6221d6>
          ]
  c:\code\mesheditor\external\libigl\include\igl\doublearea.cpp(196): note: see reference to function template instantiation 'bool igl::parallel_for<Index,igl::doublearea::<lambda_20194c6ff60897c31b155cf6fd000e2a>>(const Index,const FunctionType &,const ::size_t)' being compiled
          with
          [
              Index=Index,
              FunctionType=igl::doublearea::<lambda_20194c6ff60897c31b155cf6fd000e2a>
          ]
  Viewer.vcxproj -> C:\Code\MeshEditor\x64\Debug\Viewer.exe
  Viewer.vcxproj -> C:\Code\MeshEditor\x64\Debug\Viewer.pdb (Partial PDB)
